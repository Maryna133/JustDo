{"ast":null,"code":"var _jsxFileName = \"D:\\\\mentalstack\\\\justdo\\\\src\\\\context\\\\global-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalContext = /*#__PURE__*/createContext([]);\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  firstName: \"\",\n  surname: \"\"\n};\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"SAVE_LOGIN\":\n      return { ...state,\n        email: action.email\n      };\n\n    case \"SAVE_PASSWORD\":\n      return { ...state,\n        password: action.password\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\nexport const GlobalContextProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: [state, dispatch],\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalContextProvider;\nex;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalContextProvider\");","map":{"version":3,"sources":["D:/mentalstack/justdo/src/context/global-context.js"],"names":["React","useReducer","createContext","GlobalContext","initialState","email","password","firstName","surname","reducer","state","action","type","GlobalContextProvider","props","dispatch","children","ex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;;AAEA,OAAO,MAAMC,aAAa,gBAAGD,aAAa,CAAC,EAAD,CAAnC;AAEP,MAAME,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,SAAS,EAAE,EAHQ;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;AAOA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELL,QAAAA,KAAK,EAAEM,MAAM,CAACN;AAFT,OAAP;;AAKF,SAAK,eAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELJ,QAAAA,QAAQ,EAAEK,MAAM,CAACL;AAFZ,OAAP;;AAIF;AACE,aAAO,EACL,GAAGI;AADE,OAAP;AAbJ;AAiBD,CAlBM;AAoBP,OAAO,MAAMG,qBAAqB,GAAIC,KAAD,IAAW;AAAA;;AAC9C,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBd,UAAU,CAACQ,OAAD,EAAUL,YAAV,CAApC;AACA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,CAACM,KAAD,EAAQK,QAAR,CAA/B;AAAA,cACGD,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAPM;;GAAMH,qB;;KAAAA,qB;AAQbI,EAAE","sourcesContent":["import React, { useReducer, createContext } from \"react\";\r\n\r\nexport const GlobalContext = createContext([]);\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  firstName: \"\",\r\n  surname: \"\"\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SAVE_LOGIN\":\r\n      return {\r\n        ...state,\r\n        email: action.email\r\n\r\n      };\r\n    case \"SAVE_PASSWORD\":\r\n      return {\r\n        ...state,\r\n        password: action.password\r\n      };\r\n    default:\r\n      return {\r\n        ...state\r\n      };\r\n  }\r\n};\r\n\r\nexport const GlobalContextProvider = (props) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <GlobalContext.Provider value={[state, dispatch]}>\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\nex\r\n"]},"metadata":{},"sourceType":"module"}