{"ast":null,"code":"var _jsxFileName = \"D:\\\\mentalstack\\\\justdo\\\\src\\\\components\\\\field\\\\FieldPassword.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport './Field.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FieldEmail = () => {\n  _s();\n\n  var _state$password;\n\n  const [password, setPassword] = useState((_state$password = state.password) !== null && _state$password !== void 0 ? _state$password : '');\n  const [passwordError, setPasswordError] = useState('');\n\n  const passwordHandler = e => {\n    setPassword(e.target.value);\n    const re = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n\n    if (!re.test(String(e.target.value).toLowerCase())) {\n      setPasswordError('Incorrect data');\n    } else setPasswordError('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"#\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      class: \"text-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"text-field__input\",\n        placeholder: \"Enter your password\",\n        value: password,\n        onChange: e => passwordHandler(e),\n        type: \"text\",\n        id: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"text-field__label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input__error\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n\n_s(FieldEmail, \"z6hYbY+6LBfXbGVlBoqjlGF5Ak4=\");\n\n_c = FieldEmail;\nexport default FieldEmail;\n\nvar _c;\n\n$RefreshReg$(_c, \"FieldEmail\");","map":{"version":3,"sources":["D:/mentalstack/justdo/src/components/field/FieldPassword.js"],"names":["React","useState","FieldEmail","password","setPassword","state","passwordError","setPasswordError","passwordHandler","e","target","value","re","test","String","toLowerCase"],"mappings":";;;AAAA,OAAOA,KAAP,MAAiB,OAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,aAAP;;;AAMA,MAAMC,UAAU,GAAE,MAAM;AAAA;;AAAA;;AACtB,QAAK,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,oBAAEI,KAAK,CAACF,QAAR,6DAAmB,EAAnB,CAAvC;AACA,QAAK,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAjD;;AAIA,QAAMO,eAAe,GAAIC,CAAD,IAAM;AAC1BL,IAAAA,WAAW,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACA,UAAMC,EAAE,GAAG,kCAAX;;AACA,QAAI,CAACA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACL,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN,CAAuBI,WAAvB,EAAR,CAAL,EAAmD;AAC/CR,MAAAA,gBAAgB,CAAC,gBAAD,CAAhB;AACH,KAFD,MAEOA,gBAAgB,CAAC,EAAD,CAAhB;AAET,GAPF;;AAQE,sBACE;AAAM,IAAA,MAAM,EAAC,GAAb;AAAA,2BACA;AAAO,MAAA,KAAK,EAAC,YAAb;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,mBAAd;AAAkC,QAAA,WAAW,EAAC,qBAA9C;AAAoE,QAAA,KAAK,EAAEJ,QAA3E;AAAqF,QAAA,QAAQ,EAAEM,CAAC,IAAID,eAAe,CAACC,CAAD,CAAnH;AAEkE,QAAA,IAAI,EAAC,MAFvE;AAE8E,QAAA,EAAE,EAAC,UAFjF;AAE4F,QAAA,IAAI,EAAC;AAFjG;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAM,QAAA,KAAK,EAAC,mBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAOGH,aAAa,iBAAI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBAA+BA;AAA/B;AAAA;AAAA;AAAA;AAAA,cAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAaH,CA3BD;;GAAMJ,U;;KAAAA,U;AA6BN,eAAeA,UAAf","sourcesContent":["import React from'react';\r\nimport { useState } from 'react';\r\nimport './Field.css'\r\n\r\n\r\n\r\n\r\n\r\nconst FieldEmail= () => {\r\n  const[password, setPassword] = useState( state.password ??'')    \r\n  const[passwordError, setPasswordError] = useState('')\r\n \r\n\r\n\r\n  const passwordHandler = (e) =>{\r\n      setPassword(e.target.value)\r\n      const re = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/  \r\n      if (!re.test(String(e.target.value).toLowerCase())){\r\n          setPasswordError('Incorrect data')\r\n      } else setPasswordError('')\r\n  \r\n   }\r\n    return(\r\n      <form action=\"#\">\r\n      <label class='text-field'>\r\n        <input  class=\"text-field__input\" placeholder=\"Enter your password\" value={password} onChange={e => passwordHandler(e)}  \r\n                                                                       \r\n                                                                          type=\"text\" id=\"password\" name=\"password\"/>\r\n        <span class=\"text-field__label\">\r\n          Password\r\n        </span>\r\n        {passwordError && <div className='input__error'>{passwordError}</div>}\r\n      </label>\r\n    </form>\r\n    );\r\n}\r\n\r\nexport default FieldEmail;"]},"metadata":{},"sourceType":"module"}