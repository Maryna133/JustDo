{"ast":null,"code":"var _jsxFileName = \"D:\\\\mentalstack\\\\justdo\\\\src\\\\components\\\\field\\\\Field.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport './Field.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Field = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    control,\n    formState,\n    handleSubmit\n  } = useForm({\n    mode: \"onChange\"\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n    localStorage.setItem('isAuth', true);\n    navigate('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(Controller, {\n        name: \"email\",\n        control: control,\n        defaultValue: \"\",\n        rules: {\n          required: true,\n          pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n        },\n        render: _ref => {\n          let {\n            field\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            ...field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 42\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this), formState.errors.email && /*#__PURE__*/_jsxDEV(FormHelperText, {\n        className: \"error-message\",\n        children: \"Please enter a valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: \"form-control\",\n      children: /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"password\",\n        control: control,\n        defaultValue: \"\",\n        rules: {\n          required: true\n        },\n        render: _ref2 => {\n          let {\n            field\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"password\",\n            label: \"Password\",\n            ...field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 42\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: \"form-control\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: !formState.isValid,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Field, \"iD96B4oXemfU7BJuQxgRnseEbMc=\", true);\n\n_c = Field;\nexport default Field;\n\nvar _c;\n\n$RefreshReg$(_c, \"Field\");","map":{"version":3,"sources":["D:/mentalstack/justdo/src/components/field/Field.js"],"names":["React","useState","Field","navigate","useNavigate","control","formState","handleSubmit","useForm","mode","onSubmit","data","console","log","localStorage","setItem","required","pattern","field","errors","email","isValid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAiB,OAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,aAAP;;;AAMA,MAAMC,KAAK,GAAE,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,MAAuCC,OAAO,CAAC;AACjDC,IAAAA,IAAI,EAAE;AAD2C,GAAD,CAApD;;AAGA,QAAMC,QAAQ,GAAGC,IAAI,IAAI;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+B,IAA/B;AACAZ,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,GAJD;;AAMA,sBACI;AAAM,IAAA,QAAQ,EAAEI,YAAY,CAACG,QAAD,CAA5B;AAAwC,IAAA,SAAS,EAAC,MAAlD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,SAAS,EAAC,cAAvB;AAAA,8BACI,QAAC,UAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,OAAO,EAAEL,OAFb;AAGI,QAAA,YAAY,EAAC,EAHjB;AAII,QAAA,KAAK,EAAE;AAAEW,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,OAAO,EAAE;AAA3B,SAJX;AAKI,QAAA,MAAM,EAAE;AAAA,cAAC;AAAEC,YAAAA;AAAF,WAAD;AAAA,8BAAe,QAAC,SAAD;AACnB,YAAA,KAAK,EAAC,OADa;AAAA,eAEfA;AAFe;AAAA;AAAA;AAAA;AAAA,kBAAf;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,cADJ,EAYQZ,SAAS,CAACa,MAAV,CAAiBC,KAAjB,iBACA,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAC,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAkBI,QAAC,WAAD;AAAa,MAAA,SAAS,EAAC,cAAvB;AAAA,6BACI,QAAC,UAAD;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,OAAO,EAAEf,OAFb;AAGI,QAAA,YAAY,EAAC,EAHjB;AAII,QAAA,KAAK,EAAE;AAAEW,UAAAA,QAAQ,EAAE;AAAZ,SAJX;AAKI,QAAA,MAAM,EAAE;AAAA,cAAC;AAAEE,YAAAA;AAAF,WAAD;AAAA,8BAAe,QAAC,SAAD;AACnB,YAAA,IAAI,EAAC,UADc;AAEnB,YAAA,KAAK,EAAC,UAFa;AAAA,eAGfA;AAHe;AAAA;AAAA;AAAA;AAAA,kBAAf;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAlBJ,eA+BI,QAAC,WAAD;AAAa,MAAA,SAAS,EAAC,cAAvB;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,WAA9B;AAA0C,QAAA,KAAK,EAAC,SAAhD;AAA0D,QAAA,QAAQ,EAAE,CAACZ,SAAS,CAACe,OAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCD,CAhDD;;GAAMnB,K;;KAAAA,K;AAmDN,eAAeA,KAAf","sourcesContent":["import React from'react';\r\nimport { useState } from 'react';\r\nimport './Field.css'\r\n\r\n\r\n\r\n\r\n\r\nconst Field= () => {\r\n  const navigate = useNavigate();\r\n  const { control, formState, handleSubmit } = useForm({\r\n      mode: \"onChange\"\r\n  });\r\n  const onSubmit = data => {\r\n      console.log(data)\r\n      localStorage.setItem('isAuth', true)\r\n      navigate('/');\r\n  };\r\n\r\n  return (\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\r\n          <h2>Login</h2>\r\n          <FormControl className=\"form-control\">\r\n              <Controller\r\n                  name=\"email\"\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                  rules={{ required: true, pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i }}\r\n                  render={({ field }) => <TextField\r\n                      label=\"Email\"\r\n                      {...field}\r\n                  />}\r\n              />\r\n              {\r\n                  formState.errors.email &&\r\n                  <FormHelperText className=\"error-message\">Please enter a valid email.</FormHelperText>\r\n              }\r\n          </FormControl>\r\n          <FormControl className=\"form-control\">\r\n              <Controller\r\n                  name=\"password\"\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                  rules={{ required: true }}\r\n                  render={({ field }) => <TextField\r\n                      type=\"password\"\r\n                      label=\"Password\"\r\n                      {...field}\r\n                  />}\r\n              />\r\n          </FormControl>\r\n          <FormControl className=\"form-control\">\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={!formState.isValid}>Login</Button>\r\n          </FormControl>\r\n      </form>\r\n  )\r\n}\r\n\r\n\r\nexport default Field;"]},"metadata":{},"sourceType":"module"}