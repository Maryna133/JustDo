{"ast":null,"code":"var _jsxFileName = \"D:\\\\mentalstack\\\\justdo\\\\src\\\\components\\\\stepper\\\\password\\\\StepPassword.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../../../context/global-context.js\";\nimport NextButton from '../../button/Next';\nimport PrevButton from '../../button/PrevButton.js';\nimport './StepPassword.css';\nimport Field from '../../field/Field.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StepPassword = _ref => {\n  _s();\n\n  var _errors, _errors$Email;\n\n  let {\n    setStep\n  } = _ref;\n  const [state, dispatch] = useContext(GlobalContext);\n  const [password, setPassword] = useState(state.password || \"\");\n\n  const submitForm = () => {\n    dispatch({\n      type: \"SAVE_PASSWORD\",\n      password: password\n    });\n    setStep(2);\n  };\n\n  const prevForm = () => {\n    dispatch({\n      type: \"SAVE_PASSWORD\",\n      password: password\n    });\n    setStep(3);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-password\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-circle opacity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"step-password__title\",\n      children: \"Almost done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"#\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"text-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"text-field__input\",\n          placeholder: \"Enter your E-Mail\",\n          ...register(\"Email\", {\n            required: true,\n            pattern: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"text-field__label\",\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), ((_errors = errors) === null || _errors === void 0 ? void 0 : (_errors$Email = _errors.Email) === null || _errors$Email === void 0 ? void 0 : _errors$Email.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(PrevButton, {\n      onClick: prevForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n      className: \"step-button\",\n      info: \"Next\",\n      onClick: submitForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this);\n};\n\n_s(StepPassword, \"ZrsykhI5eQb66tzBt8HieFegljE=\");\n\n_c = StepPassword;\nexport default StepPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepPassword\");","map":{"version":3,"sources":["D:/mentalstack/justdo/src/components/stepper/password/StepPassword.js"],"names":["React","useContext","useState","GlobalContext","NextButton","PrevButton","Field","StepPassword","setStep","state","dispatch","password","setPassword","submitForm","type","prevForm","register","required","pattern","errors","Email"],"mappings":";;;AAAA,OAAOA,KAAP,MAAiB,OAAjB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,aAAT,QAA8B,oCAA9B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,sBAAlB;;;AAMA,MAAMC,YAAY,GAAG,QAAe;AAAA;;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAGhC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACE,aAAD,CAApC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAACO,KAAK,CAACE,QAAN,IAAkB,EAAnB,CAAxC;;AAEA,QAAME,UAAU,GAAG,MAAM;AAGvBH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,eADC;AAEPH,MAAAA,QAAQ,EAAEA;AAFH,KAAD,CAAR;AAIAH,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GARD;;AAWA,QAAMO,QAAQ,GAAG,MAAM;AAGrBL,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,eADC;AAEPH,MAAAA,QAAQ,EAAEA;AAFH,KAAD,CAAR;AAIAH,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GARD;;AAYA,sBACQ;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAI,MAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAM,MAAA,MAAM,EAAC,GAAb;AAAA,6BACV;AAAO,QAAA,KAAK,EAAC,YAAb;AAAA,gCACE;AAAQ,UAAA,KAAK,EAAC,mBAAd;AAAkC,UAAA,WAAW,EAAC,mBAA9C;AAAA,aACQQ,QAAQ,CAAC,OAAD,EAAU;AACpBC,YAAAA,QAAQ,EAAE,IADU;AAEpBC,YAAAA,OAAO,EAAE;AAFW,WAAV;AADhB;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAM,UAAA,KAAK,EAAC,mBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,EAQG,YAAAC,MAAM,UAAN,2DAAQC,KAAR,gEAAeN,IAAf,MAAwB,UAAxB,iBAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAR1C;AAAA;AAAA;AAAA;AAAA;AAAA;AADU;AAAA;AAAA;AAAA;AAAA,YAPJ,eAoBI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEC;AAArB;AAAA;AAAA;AAAA;AAAA,YApBJ,eAqBI,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,aAAtB;AAAoC,MAAA,IAAI,EAAC,MAAzC;AAAiD,MAAA,OAAO,EAAEF;AAA1D;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AA0BH,CAvDD;;GAAMN,Y;;KAAAA,Y;AAyDN,eAAeA,YAAf","sourcesContent":["import React from'react';\r\nimport { useContext, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../context/global-context.js\";\r\nimport NextButton from '../../button/Next';\r\nimport PrevButton from '../../button/PrevButton.js'\r\nimport './StepPassword.css'\r\nimport Field from '../../field/Field.js';\r\n\r\n\r\n\r\n\r\n\r\nconst StepPassword = ({setStep}) => {\r\n   \r\n   \r\n    const [state, dispatch] = useContext(GlobalContext);\r\n    const [password, setPassword] = useState(state.password || \"\");\r\n  \r\n    const submitForm = () => {\r\n     \r\n  \r\n      dispatch({\r\n        type: \"SAVE_PASSWORD\",\r\n        password: password\r\n      });\r\n      setStep(2);\r\n    };\r\n\r\n    \r\n    const prevForm = () => {\r\n     \r\n  \r\n      dispatch({\r\n        type: \"SAVE_PASSWORD\",\r\n        password: password\r\n      });\r\n      setStep(3);\r\n    };\r\n\r\n\r\n  \r\n    return(\r\n            <div className='step-password'>\r\n                <div className='step'>\r\n                    <div className='step-circle'></div>\r\n                    <div className='step-circle'></div>\r\n                    <div className='step-circle opacity'></div>\r\n                </div>\r\n                <h3 className='step-password__title'>Almost done</h3>\r\n                <form action=\"#\">\r\n      <label class='text-field'>\r\n        <input  class=\"text-field__input\" placeholder=\"Enter your E-Mail\"\r\n            {...register(\"Email\", {\r\n              required: true,\r\n              pattern: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/  \r\n            })}\r\n        />\r\n        <span class=\"text-field__label\">E-mail</span>\r\n        {errors?.Email?.type === \"required\"  && <p>This field is required</p>}\r\n       \r\n      </label>\r\n    </form>\r\n                <PrevButton onClick={prevForm} />\r\n                <NextButton className='step-button' info='Next'  onClick={submitForm}/>       \r\n                \r\n            </div>\r\n    );\r\n}\r\n\r\nexport default StepPassword;"]},"metadata":{},"sourceType":"module"}