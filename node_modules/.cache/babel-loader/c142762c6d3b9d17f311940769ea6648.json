{"ast":null,"code":"var _jsxFileName = \"D:\\\\mentalstack\\\\justdo\\\\src\\\\components\\\\stepper\\\\email\\\\StepEmail.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../../../context/global-context.js\";\nimport NextButton from '../../button/Next.js';\nimport { useForm } from \"react-hook-form\";\nimport './StepEmail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StepEmail = _ref => {\n  _s();\n\n  let {\n    setStep\n  } = _ref;\n  // const { next } = navigation;\n  const [state, dispatch] = useContext(GlobalContext);\n  const [email, setEmail] = useState(state.email || \"\");\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const submitForm = () => {\n    // if (email === \"\") return;\n    console.log(1);\n    setStep(1);\n    dispatch({\n      type: \"SAVE_LOGIN\",\n      email: email\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-email\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-circle opacity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-circle opacity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"step-email__title\",\n      children: \"Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"step-email__subtitle\",\n      children: [\"Already a member?\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"step-email__subtitle__color\",\n        children: \" Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 60\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"#\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"text-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"text-field__input\",\n          placeholder: props.placeholder,\n          value: email,\n          onChange: e => emailHandler(e),\n          value: email,\n          onChange: e => emailHandler(e),\n          onChange: onChange,\n          type: \"text\",\n          id: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"text-field__label\",\n          children: props.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input__error\",\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n      className: \"next-button\",\n      info: \"Next\",\n      onClick: submitForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"step-text\",\n      children: [\"Continuing with Email, you agree to the\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"step-text__color\",\n        children: \"Terms of Use\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 71\n      }, this), \"  and \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"step-text__color\",\n        children: \"Privacy Policy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 131\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StepEmail, \"j+elcFFgDWQJjcTADC1u+Bua7FQ=\", false, function () {\n  return [useForm];\n});\n\n_c = StepEmail;\nexport default StepEmail;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepEmail\");","map":{"version":3,"sources":["D:/mentalstack/justdo/src/components/stepper/email/StepEmail.js"],"names":["React","useContext","useState","GlobalContext","NextButton","useForm","StepEmail","setStep","state","dispatch","email","setEmail","register","handleSubmit","watch","formState","errors","submitForm","console","log","type","props","placeholder","e","emailHandler","onChange","info","emailError"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useContext, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../context/global-context.js\";\r\nimport NextButton from '../../button/Next.js';\r\nimport { useForm } from \"react-hook-form\";\r\nimport './StepEmail.css'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst StepEmail = ({ setStep }) => {\r\n  // const { next } = navigation;\r\n  const [state, dispatch] = useContext(GlobalContext);\r\n  const [email, setEmail] = useState(state.email || \"\");\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors }\r\n  } = useForm();\r\n\r\n  const submitForm = () => {\r\n    // if (email === \"\") return;\r\n    console.log(1);\r\n    setStep(1);\r\n    dispatch({\r\n      type: \"SAVE_LOGIN\",\r\n      email: email\r\n    });\r\n\r\n  };\r\n  return (\r\n    <div className='step-email'>\r\n      <div className='step'>\r\n        <div className='step-circle'></div>\r\n        <div className='step-circle opacity'></div>\r\n        <div className='step-circle opacity'></div>\r\n      </div>\r\n      <h3 className='step-email__title'>Registration</h3>\r\n      <p className='step-email__subtitle'>Already a member?<span className='step-email__subtitle__color'> Log in</span></p>\r\n      <form action=\"#\">\r\n      <label class='text-field'>\r\n        <input  class=\"text-field__input\" placeholder={props.placeholder} value={email} onChange={e => emailHandler(e)}  value={email} onChange={e => emailHandler(e)}  \r\n                                                                       onChange={onChange}\r\n                                                                          type=\"text\" id=\"email\" name=\"email\"/>\r\n        <span class=\"text-field__label\">{props.info}</span>\r\n        {emailError && <div className='input__error'>{emailError}</div>}\r\n      </label>\r\n    </form>\r\n      <NextButton className='next-button'  info='Next' onClick={submitForm} />\r\n      <p className='step-text'>Continuing with Email, you agree to the<span className='step-text__color'>Terms of Use</span>  and <span className='step-text__color' >Privacy Policy</span>.</p>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StepEmail;"]},"metadata":{},"sourceType":"module"}