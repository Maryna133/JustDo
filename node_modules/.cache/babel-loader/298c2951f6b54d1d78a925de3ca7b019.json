{"ast":null,"code":"var _jsxFileName = \"D:\\\\mentalstack\\\\justdo\\\\src\\\\components\\\\stepper\\\\password\\\\StepPassword.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { GlobalContext } from \"../../../context/global-context.js\";\nimport NextButton from '../../button/Next';\nimport PrevButton from '../../button/PrevButton.js';\nimport './StepPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StepPassword = _ref => {\n  _s();\n\n  var _errors$email, _errors$email2;\n\n  let {\n    setStep\n  } = _ref;\n  const [state, dispatch] = useContext(GlobalContext);\n  const [password, setPassword] = useState(state.password || \"\");\n  const {\n    register,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const submitForm = () => {\n    dispatch({\n      type: \"SAVE_PASSWORD\",\n      password: password\n    });\n    setStep(2);\n  };\n\n  const prevForm = () => {\n    dispatch({\n      type: \"SAVE_PASSWORD\",\n      password: password\n    });\n    setStep(3);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-password\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-circle opacity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"step-password__title\",\n      children: \"Almost done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"text-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"text-field__input\",\n          placeholder: \"Enter your password\",\n          ...register(\"password\", {\n            required: true,\n            pattern: /^[A-Z0-9._!&@]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 23\n        }, this), \" \", (errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Alphabetical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"text-field__label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"text-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"text-field__input\",\n          placeholder: \"Enter your password\",\n          ...register(\"password\", {\n            required: true,\n            pattern: /^[A-Z0-9._!&@]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }, this), \" \", (errors === null || errors === void 0 ? void 0 : (_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Alphabetical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"text-field__label\",\n          children: \"Password Confirmation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(PrevButton, {\n      onClick: prevForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n      className: \"step-button\",\n      info: \"Next\",\n      onClick: submitForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this);\n};\n\n_s(StepPassword, \"8M8fWjT8Ju+HB0TTMiqEEgkdCT0=\", false, function () {\n  return [useForm];\n});\n\n_c = StepPassword;\nexport default StepPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepPassword\");","map":{"version":3,"sources":["D:/mentalstack/justdo/src/components/stepper/password/StepPassword.js"],"names":["React","useContext","useState","useForm","GlobalContext","NextButton","PrevButton","StepPassword","setStep","state","dispatch","password","setPassword","register","formState","errors","submitForm","type","prevForm","required","pattern","email"],"mappings":"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","sourcesContent":["import React from'react';\r\nimport { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { GlobalContext } from \"../../../context/global-context.js\";\r\nimport NextButton from '../../button/Next';\r\nimport PrevButton from '../../button/PrevButton.js'\r\nimport './StepPassword.css'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst StepPassword = ({setStep}) => {\r\n   \r\n   \r\n    const [state, dispatch] = useContext(GlobalContext);\r\n    const [password, setPassword] = useState(state.password || \"\");\r\n  \r\n    const {\r\n      register,\r\n      formState: { errors }\r\n    } = useForm();\r\n  \r\n  \r\n    const submitForm = () => {\r\n      dispatch({\r\n        type: \"SAVE_PASSWORD\",\r\n        password: password\r\n      });\r\n      setStep(2);\r\n    };\r\n\r\n    \r\n    const prevForm = () => {\r\n      dispatch({\r\n        type: \"SAVE_PASSWORD\",\r\n        password: password\r\n      });\r\n      setStep(3);\r\n    };\r\n\r\n\r\n  \r\n    return(\r\n            <div className='step-password'>\r\n                <div className='step'>\r\n                    <div className='step-circle'></div>\r\n                    <div className='step-circle'></div>\r\n                    <div className='step-circle opacity'></div>\r\n                </div>\r\n                <h3 className='step-password__title'>Almost done</h3>\r\n                <form >\r\n                  <label class='text-field'>\r\n                      <input  class=\"text-field__input\" placeholder=\"Enter your password\"\r\n                          {...register(\"password\", {\r\n                              required: true,\r\n                              pattern: /^[A-Z0-9._!&@]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\r\n                          })}\r\n                      /> {errors?.email?.type === \"pattern\" && (\r\n                            <p>Alphabetical characters only</p>\r\n                            )}\r\n                      <span class=\"text-field__label\">Password</span>\r\n                    </label> \r\n                </form>\r\n                <form >\r\n                  <label class='text-field'>\r\n                  <input  class=\"text-field__input\" placeholder=\"Enter your password\"\r\n                    {...register(\"password\", {\r\n                        required: true,\r\n                        pattern: /^[A-Z0-9._!&@]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\r\n                    })}\r\n                  /> {errors?.email?.type === \"pattern\" && (\r\n                  <p>Alphabetical characters only</p>\r\n                  )}\r\n                <span class=\"text-field__label\">Password Confirmation</span>\r\n            </label> \r\n    </form>\r\n                <PrevButton onClick={prevForm} />\r\n                <NextButton className='step-button' info='Next'  onClick={submitForm}/>       \r\n                \r\n            </div>\r\n    );\r\n}\r\n\r\nexport default StepPassword;"]},"metadata":{},"sourceType":"module"}